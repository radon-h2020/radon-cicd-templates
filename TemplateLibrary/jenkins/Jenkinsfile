pipeline {
    agent any
    environment {
        //Template Library credentials. (Stored as secrets in Jenkins platform)
        TEMPLATE_LIBRARY_USER = credentials('template-lib-user')
        TEMPLATE_LIBRARY_PASS = credentials('template-lib-pass')
        // The reference name used to store a blueprint in Template Library.  
        csar_reference = '<TL_blueprint_name>'                          // **NOTE** Comment this line if triggering pipeline through IDE's "Trigger CI" button.
        // The version used to store a blueprint in Template Library.
        csar_version   = '<TL_blueprint_version>'                       // **NOTE** Comment this line if triggering pipeline through IDE's "Trigger CI" button.
    }
    stages {
        stage('Fetch blueprint from TL') {
            steps {
                // Authenticate yourself using the environment variables TEMPLATE_LIBRARY_USER & TEMPLATE_LIBRARY_PASS 
                // GET command to download the blueprint from Template Library. (Assuming the the user has access to the specified blueprint)
                sh '''
                    echo $csar_reference
                    echo $csar_version
                    
                    api="https://template-library-xopera.xlab.si/api"
                    auth_base_url="https://openid-xopera.xlab.si"
            
                    alias cookiecurl="curl -sSL --cookie-jar cookiejar.txt --cookie cookiejar.txt"
                    response_from_credentials_redirected_to_next_auth="$(cookiecurl $api/users/current)"

                    redirect_url_internal="$(echo $response_from_credentials_redirected_to_next_auth | xmllint --html --xpath "string(//form[@id='kc-form-login']/@action)" - 2>/dev/null)"
                    redirect_url="$redirect_url_internal"

                    cookiecurl "$redirect_url" -d "username=$TEMPLATE_LIBRARY_USER" -d "password=$TEMPLATE_LIBRARY_PASS" -d credentialId=""
                    cookiecurl "$api/auth/consent" -XPOST -d "{\"iAcknowledgePotentialDataLossAndAmAwareOfAllRisks\": true}"

                    cookiecurl -X GET "$api/templates/$csar_reference/versions/$csar_version/templateFile" --output blueprint
                '''
            }
        }
    }
    post { 
        always { 
            cleanWs()
        }
    }
}   
