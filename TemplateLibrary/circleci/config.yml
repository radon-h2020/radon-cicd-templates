version: 2.1
jobs:
  master-integration:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: merge with master
          command: |
            git checkout -b master
            git merge --ff-only $CIRCLE_BRANCH
            git push -u origin master


  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: pack python folder
          command: |
            python3 -m venv venv
            venv/bin/pip3 install -r requirements.txt
            cd venv/lib/python3.6/site-packages
            zip -r $OLDPWD/ImageResize.zip .
            cd $OLDPWD
            zip ImageResize.zip image_resize.py
            mkdir /tmp/resources
            cp playbooks/aws_role/policy.json /tmp/resources
            cp ImageResize.zip /tmp/resources
      - persist_to_workspace:
          root: /tmp/resources
          paths:
            - policy.json
            - ImageResize.zip

  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/resources
      - run:
          name: install dependencies
          command: |
            sudo pip3 install boto3
            sudo pip3 install git+https://github.com/ansible/ansible.git@devel
            sudo pip3 install opera
      - run:
          name: deploy
          command: |
            opera deploy resize resize_service_opera.yml

  test:
    docker:
      - image: circleci/python:3.7.2
    environment:
      IMAGE: setter.jpg
    steps:
      - run:
          name: install dependencies
          command: |
            sudo pip3 install awscli
      - run:
          name: upload image to s3
          command: |
            curl https://www.dogsnsw.org.au/media/img/BrowseAllBreed//Irish-Setter.jpg > $IMAGE
            aws s3 mv $IMAGE s3://radon-img3-naesheim
      - run:
          name: verify content
          command: |
            aws s3 ls radon-img3-naesheim-resized
      
workflows:
  version: 2
  intergrate-master:
    jobs:
      - master-integration:
          filters:
            branches:
              only:
                - ready/*


  build-test-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - build
      - test:
          filters:
            branches:
              only:
                - master
          requires:
            - deploy